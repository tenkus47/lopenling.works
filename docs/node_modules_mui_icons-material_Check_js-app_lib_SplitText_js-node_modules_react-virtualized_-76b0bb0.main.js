"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkteminusclient"] = self["webpackChunkteminusclient"] || []).push([["node_modules_mui_icons-material_Check_js-app_lib_SplitText_js-node_modules_react-virtualized_-76b0bb0"],{

/***/ "./node_modules/@mui/icons-material/Check.js":
/*!***************************************************!*\
  !*** ./node_modules/@mui/icons-material/Check.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(__webpack_require__(/*! ./utils/createSvgIcon */ \"./node_modules/@mui/icons-material/utils/createSvgIcon.js\"));\n\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"./node_modules/react/jsx-runtime.js\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://teminusclient/./node_modules/@mui/icons-material/Check.js?");

/***/ }),

/***/ "./app/lib/SplitText.js":
/*!******************************!*\
  !*** ./app/lib/SplitText.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SplitText)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ \"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n/* harmony import */ var _SegmentedText__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SegmentedText */ \"./app/lib/SegmentedText.js\");\n/* harmony import */ var _AnnotatedText__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AnnotatedText */ \"./app/lib/AnnotatedText.js\");\n\n\n\n\n\nvar SplitText = /*#__PURE__*/function () {\n  function SplitText(annotatedText, splitter) {\n    (0,_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this, SplitText);\n\n    this.annotatedText = annotatedText;\n    this.splitter = splitter;\n    this._texts = null;\n    this._textsId = null;\n    this._textsFinalPositions = [];\n  }\n\n  (0,_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(SplitText, [{\n    key: \"texts\",\n    get: function get() {\n      if (!this.annotatedText) {\n        return [];\n      }\n\n      if (!this._texts || this._textsId !== this.annotatedText.getUniqueId()) {\n        this._textsFinalPositions = [];\n        var segmentedText = this.annotatedText.segmentedText;\n        var textString = segmentedText.getText();\n        var splitPositions = this.splitter(textString).filter(function (l) {\n          return l !== 0;\n        });\n\n        if (splitPositions.length === 0) {\n          this._textsFinalPositions.push(textString.length);\n\n          return [segmentedText];\n        }\n\n        var lastPosition = splitPositions[splitPositions.length - 1];\n\n        if (lastPosition + 1 < textString.length) {\n          splitPositions.push(textString.length - 1);\n        }\n\n        var segments = segmentedText.segments;\n        var startIndex = 0;\n        var texts = [];\n\n        for (var i = 0; i < splitPositions.length; i++) {\n          var position = splitPositions[i];\n          var endIndex = segmentedText.indexOfSegmentAtPosition(position - 1);\n          var textSegments = void 0;\n\n          if (i == splitPositions.length - 1) {\n            // final position\n            textSegments = segments.slice(startIndex);\n          } else {\n            textSegments = segments.slice(startIndex, endIndex + 1);\n          }\n\n          var text = new _SegmentedText__WEBPACK_IMPORTED_MODULE_2__[\"default\"](textSegments);\n          texts.push(text);\n          startIndex = endIndex + 1;\n\n          if (endIndex >= 0) {\n            var finalSegment = segments[endIndex];\n\n            this._textsFinalPositions.push(finalSegment.end);\n          }\n        }\n\n        this._texts = texts.filter(function (l) {\n          return l.segments.length > 0;\n        });\n        this._textsId = this.annotatedText.getUniqueId();\n      }\n\n      return this._texts || [];\n    }\n  }, {\n    key: \"getTextsFinalPositions\",\n    value: function getTextsFinalPositions() {\n      this.texts;\n      return this._textsFinalPositions;\n    }\n    /**\r\n     * Return the index of the text portion that contains the given position.\r\n     *\r\n     * @param position\r\n     * @returns number\r\n     */\n\n  }, {\n    key: \"getTextIndexOfPosition\",\n    value: function getTextIndexOfPosition(position) {\n      var textsFinalPositions = this.getTextsFinalPositions();\n      var lastPosition = 0;\n      var textIndex = null;\n\n      for (var i = 0; i < textsFinalPositions.length; i++) {\n        var endPosition = textsFinalPositions[i];\n\n        if (position >= lastPosition && position <= endPosition) {\n          textIndex = i;\n          break;\n        }\n\n        lastPosition = endPosition;\n      }\n\n      if (textIndex === null) {\n        // Likely an insertion at the end of a text\n        console.warn(\"no index for position %d\", position);\n        textIndex = textsFinalPositions.length - 1;\n      }\n\n      return textIndex;\n    }\n  }]);\n\n  return SplitText;\n}();\n\n\n\n//# sourceURL=webpack://teminusclient/./app/lib/SplitText.js?");

/***/ })

}]);