/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkteminusclient"] = self["webpackChunkteminusclient"] || []).push([["app_components_TextDetail_AnnotationControls_test_js"],{

/***/ "./app/components/TextDetail/AnnotationControls.test.js":
/*!**************************************************************!*\
  !*** ./app/components/TextDetail/AnnotationControls.test.js ***!
  \**************************************************************/
/***/ (() => {

eval("// import React from \"react\";\n// import { shallow, configure } from \"enzyme\";\n// import Adapter from \"enzyme-adapter-react-16\";\n// import Text from \"lib/Text\";\n// import Source from \"lib/Source\";\n// import Witness from \"lib/Witness\";\n// import Annotation, {\n//     TemporaryAnnotation,\n//     ANNOTATION_TYPES\n// } from \"lib/Annotation\";\n// import { BASE_ANNOTATION_ID } from \"lib/AnnotatedText\";\n// import addTibetanShay from \"lib/addTibetanShay\";\n// import User, { getAnonymousUser } from \"lib/User\";\n// import AnnotationControls from \"./AnnotationControls\";\n// import AnnotationDetail from \"./AnnotationDetail\";\n// import AnnotationDetailEdit from \"./AnnotationDetailEdit\";\n// configure({ adapter: new Adapter() });\n// const source1 = new Source(1, \"Derge\");\n// const source2 = new Source(1, \"Pecin\");\n// const source3 = new Source(1, \"Narthang\");\n// const text = new Text(1, \"དཔལ་ནག་པོ་ཆེན་པོ་ཡུམ་ཅན་གྱི་སྒྲུབ་ཐབས་ཞེས་བྱ་བ\");\n// const baseWitness = new Witness(1, text, source1, \"Test witness\", true);\n// const otherWitness1 = new Witness(2, text, source2, null, false);\n// const otherWitness2 = new Witness(3, text, source3, null, false);\n// const anonymousUser = getAnonymousUser();\n// const user = new User(1, \"Test User\");\n// const baseAnnotation = new Annotation(\n//     BASE_ANNOTATION_ID,\n//     baseWitness,\n//     0,\n//     4,\n//     \"Test\",\n//     ANNOTATION_TYPES.variant,\n//     baseWitness\n// );\n// const annotation1 = new Annotation(\n//     1,\n//     baseWitness,\n//     0,\n//     4,\n//     \"New\",\n//     ANNOTATION_TYPES.variant,\n//     otherWitness1\n// );\n// const annotation2 = new Annotation(\n//     2,\n//     baseWitness,\n//     0,\n//     4,\n//     \"New\",\n//     ANNOTATION_TYPES.variant,\n//     otherWitness2\n// );\n// const temporaryAnnotation = new TemporaryAnnotation(\n//     baseAnnotation,\n//     baseWitness,\n//     0,\n//     4,\n//     \"Newer\",\n//     ANNOTATION_TYPES.variant,\n//     null,\n//     user\n// );\n// const extraName = [\n//     addTibetanShay(annotation1.getSourceName()),\n//     addTibetanShay(annotation2.getSourceName())\n// ].join(\" \");\n// const baseAnnotationData = {\n//     id: baseAnnotation.id,\n//     name: addTibetanShay(baseAnnotation.getSourceName()),\n//     content: baseAnnotation.content,\n//     annotation: baseAnnotation\n// };\n// const annotation1Data = {\n//     id: annotation1.id,\n//     name: extraName,\n//     content: annotation1.content,\n//     annotation: annotation1\n// };\n// const temporaryData = {\n//     id: temporaryAnnotation.id,\n//     name: temporaryAnnotation.getSourceName(),\n//     content: temporaryAnnotation.content,\n//     isTemporary: true,\n//     annotation: temporaryAnnotation\n// };\n// describe(\"AnnotationControls\", () => {\n//     test(\"Show available variants\", () => {\n//         const activeAnnotation = baseAnnotation;\n//         const availableAnnotations = [baseAnnotation, annotation1, annotation2];\n//         const annotationsData = [baseAnnotationData, annotation1Data];\n//         const controls = shallow(\n//             <AnnotationControls\n//                 annotationsData={annotationsData}\n//                 activeAnnotation={activeAnnotation}\n//                 baseAnnotation={baseAnnotation}\n//                 availableAnnotations={availableAnnotations}\n//                 user={user}\n//                 temporaryAnnotation={null}\n//                 selectedWitness={baseWitness}\n//             />\n//         );\n//         const children = controls.children();\n//         expect(children.find(AnnotationDetail).length).toEqual(2);\n//         expect(children.find(AnnotationDetailEdit).length).toEqual(0);\n//     });\n// });\n// test(\"Editing annotation\", () => {\n//     const activeAnnotation = temporaryAnnotation;\n//     const availableAnnotations = [\n//         temporaryAnnotation.basedOn,\n//         annotation1,\n//         annotation2\n//     ];\n//     const annotationsData = [\n//         temporaryData,\n//         baseAnnotationData,\n//         annotation1Data\n//     ];\n//     const controls = shallow(\n//         <AnnotationControls\n//             annotationsData={annotationsData}\n//             activeAnnotation={activeAnnotation}\n//             baseAnnotation={baseAnnotation}\n//             availableAnnotations={availableAnnotations}\n//             user={user}\n//             temporaryAnnotation={temporaryAnnotation}\n//             selectedWitness={baseWitness}\n//         />\n//     );\n//     const firstDetail = controls.childAt(1);\n//     expect(firstDetail.find(AnnotationDetailEdit).length).toEqual(1);\n//     const children = controls.children();\n//     expect(children.find(AnnotationDetail).length).toEqual(2);\n//     expect(children.find(AnnotationDetailEdit).length).toEqual(1);\n// });\n\n//# sourceURL=webpack://teminusclient/./app/components/TextDetail/AnnotationControls.test.js?");

/***/ })

}]);