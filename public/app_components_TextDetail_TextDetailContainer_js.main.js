"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkteminusclient"] = self["webpackChunkteminusclient"] || []).push([["app_components_TextDetail_TextDetailContainer_js"],{

/***/ "./app/components/TextDetail/TextDetailContainer.js":
/*!**********************************************************!*\
  !*** ./app/components/TextDetail/TextDetailContainer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n/* harmony import */ var lib_Annotation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lib/Annotation */ \"./app/lib/Annotation.js\");\n/* harmony import */ var lib_Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lib/Source */ \"./app/lib/Source.js\");\n/* harmony import */ var lib_Witness__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lib/Witness */ \"./app/lib/Witness.js\");\n/* harmony import */ var lib_Text__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! lib/Text */ \"./app/lib/Text.js\");\n/* harmony import */ var lib_TextSegment__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lib/TextSegment */ \"./app/lib/TextSegment.js\");\n/* harmony import */ var lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lib/AnnotatedText */ \"./app/lib/AnnotatedText.js\");\n/* harmony import */ var components_TextDetail__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! components/TextDetail */ \"./app/components/TextDetail/index.js\");\n/* harmony import */ var actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! actions */ \"./app/actions/index.js\");\n/* harmony import */ var reducers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! reducers */ \"./app/reducers/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var lib_segmentTibetanText__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lib/segmentTibetanText */ \"./app/lib/segmentTibetanText.js\");\n/* harmony import */ var lib_SegmentedText__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! lib/SegmentedText */ \"./app/lib/SegmentedText.js\");\n/* harmony import */ var app_constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app_constants */ \"./app/app_constants/index.js\");\n/* harmony import */ var state_helpers_TextStore__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! state_helpers/TextStore */ \"./app/state_helpers/TextStore.js\");\n\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DISMISS_CONTROLS_ON_CLICK = false;\n\nfunction getInsertionKey(annotation) {\n  return [annotation.start, annotation.length].join(\"-\");\n}\n\nvar _posAnnotatedText;\n\nvar _posAnnotations;\n\nvar _positions;\n\nvar _posVersion;\n\nvar getAnnotationPositions = function getAnnotationPositions(annotatedText, annotations) {\n  if (annotatedText === _posAnnotatedText && annotations === _posAnnotations && annotatedText.version === _posVersion) {\n    return _positions;\n  }\n\n  var positions = {};\n  var activeInsertions = {};\n\n  var _loop = function _loop(i) {\n    var annotation = annotations[i];\n\n    var _annotatedText$getPos = annotatedText.getPositionOfAnnotation(annotation),\n        _annotatedText$getPos2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_annotatedText$getPos, 2),\n        startPos = _annotatedText$getPos2[0],\n        length = _annotatedText$getPos2[1];\n\n    if (startPos == null) {\n      return \"continue\";\n    }\n\n    if (length === 0) {\n      if (annotation.isInsertion) {\n        // group with any active insertions at the same position\n        var activeKey = getInsertionKey(annotation);\n        var activeInsertionPositions = activeInsertions[activeKey];\n\n        if (activeInsertionPositions) {\n          activeInsertionPositions.map(function (pos) {\n            return positions[pos].push(annotation);\n          });\n          return \"continue\";\n        }\n\n        startPos = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.INSERTION_KEY + startPos;\n      }\n\n      if (annotation.isDeletion && annotation.length > 0) {\n        // active deletion\n        startPos = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.DELETION_KEY + startPos;\n      }\n\n      if (annotation.type === lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.pageBreak) {\n        startPos = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.PAGE_BREAK_KEY + startPos;\n      }\n\n      if (annotation.type === lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.lineBreak) {\n        startPos = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.LINE_BREAK_KEY + startPos;\n      }\n\n      if (positions[startPos] === undefined) {\n        positions[startPos] = [];\n      }\n\n      if (positions[startPos].indexOf(annotation) === -1) {\n        positions[startPos].push(annotation);\n      }\n    } else {\n      var annotationPositions = [];\n\n      for (var j = startPos; j < startPos + length; j++) {\n        if (positions[j] === undefined) {\n          positions[j] = [];\n        }\n\n        if (positions[j].indexOf(annotation) === -1) {\n          positions[j].push(annotation);\n        }\n\n        annotationPositions.push(j);\n      } // Store the positions this annotation is displayed at.\n      // This can then be used later to group with inactive insertions\n\n\n      if (annotation.isInsertion) {\n        var key = getInsertionKey(annotation);\n        activeInsertions[key] = annotationPositions;\n      }\n    }\n  };\n\n  for (var i = 0; i < annotations.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n\n  _posAnnotatedText = annotatedText;\n  _posAnnotations = annotations;\n  _positions = positions;\n  _posVersion = annotatedText.version;\n  return positions;\n};\n\nvar _selectedWitness = null;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _textAlignment$source, _selectedWitness2, _textAlignment$target;\n\n  var user = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getUser)(state);\n  var loading = state.data.loadingWitnesses || state.data.loadingAnnotations;\n  var textListVisible = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getTextListVisible)(state);\n  var isPanelLinked = reducers__WEBPACK_IMPORTED_MODULE_12__.isPanelLinked(state);\n  var textAlignmentById = reducers__WEBPACK_IMPORTED_MODULE_12__.getTextAlignmentById(state);\n\n  if (loading) {\n    return {\n      text: null,\n      witnesses: null,\n      baseWitness: null,\n      annotations: null,\n      loading: loading,\n      paginated: null,\n      pageImagesVisible: true,\n      annotatedText: null,\n      selectedAnnotatedSegments: null,\n      annotationPositions: null,\n      activeAnnotations: null,\n      activeAnnotation: null,\n      user: user,\n      textListVisible: textListVisible,\n      fontSize: app_constants__WEBPACK_IMPORTED_MODULE_16__.DEFAULT_TEXT_FONT_SIZE,\n      isPanelLinked: isPanelLinked,\n      textAlignmentById: textAlignmentById,\n      imageAlignmentById: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getImageAlignmentById)(state)\n    };\n  }\n\n  var selectedText = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedText)(state);\n  var witnesses = {};\n  var workingWitness;\n  var baseWitness;\n\n  if (selectedText) {\n    workingWitness = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getWorkingWitness)(state, selectedText.id);\n    baseWitness = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getBaseWitness)(state, selectedText.id);\n  }\n\n  var selectedSearchResult = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedSearchResult)(state);\n  var annotationPositions = {};\n  var annotations = [];\n  var annotatedText = null;\n  var activeAnnotation = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getActiveTextAnnotation)(state);\n  var selectedAnnotatedSegments = [];\n  var appliedAnnotations = {};\n  var pageBreaks = [];\n  var imagesBaseUrl = \"\";\n  var selectedWitness;\n  var searchValue = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSearchValue)(state); // Whether to show the text's page images\n\n  var paginated = false;\n  var pageImagesVisible = false;\n  var fontSize = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getTextFontSize)(state);\n\n  if (workingWitness && selectedText && state.data.witnessAnnotationsById.hasOwnProperty(workingWitness.id)) {\n    witnesses = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getTextWitnesses)(state, selectedText.id);\n    var selectedWitnessId = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedTextWitnessId)(state, selectedText.id);\n\n    if (selectedWitnessId) {\n      selectedWitness = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getWitness)(state, selectedWitnessId);\n    }\n\n    if (!selectedWitness) {\n      selectedWitness = workingWitness;\n      selectedWitnessId = workingWitness.id;\n    }\n\n    if (selectedWitness.id !== workingWitness.id) {\n      paginated = true;\n      pageImagesVisible = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.showPageImages)(state);\n    }\n\n    annotatedText = state_helpers_TextStore__WEBPACK_IMPORTED_MODULE_17__.getWitnessText(state, selectedWitness.id);\n\n    var _TextStore$getWitness = state_helpers_TextStore__WEBPACK_IMPORTED_MODULE_17__.getWitnessAnnotations(state, selectedWitness, workingWitness);\n\n    var _TextStore$getWitness2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_TextStore$getWitness, 2);\n\n    appliedAnnotations = _TextStore$getWitness2[0];\n    annotations = _TextStore$getWitness2[1];\n\n    if (annotatedText) {\n      annotationPositions = getAnnotationPositions(annotatedText, Object.values(annotations));\n    } // Get the segments that are part of the current active annotation.\n    // These are used by Text to highlight the currently selected segment.\n\n\n    if (activeAnnotation && annotatedText) {\n      // If we've just switched witnesses, make sure we select the\n      // correct part of the text by getting a new annotation.\n      if (!_selectedWitness || _selectedWitness.id !== selectedWitness.id) {\n        activeAnnotation = annotatedText.getAnnotation(activeAnnotation.start, activeAnnotation.length);\n      }\n\n      if (activeAnnotation) {\n        selectedAnnotatedSegments = annotatedText.segmentsForAnnotation(activeAnnotation);\n      }\n    }\n\n    if (selectedWitness && baseWitness && annotatedText) {\n      var witnessPageBreaks = annotatedText.getAnnotationsOfType(lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.pageBreak) || {};\n      var basePageBreaks = null;\n\n      if (selectedWitness.id !== baseWitness.id) {\n        basePageBreaks = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getAnnotationsForWitnessId)(state, workingWitness.id, lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.pageBreak, baseWitness.id);\n      }\n\n      pageBreaks = getPageBreaks(witnessPageBreaks, basePageBreaks);\n\n      for (var i = 0, len = pageBreaks.length; i < len; i++) {\n        var position = pageBreaks[i];\n        var segment = annotatedText.segmentAtOriginalPosition(position);\n\n        if (segment instanceof lib_TextSegment__WEBPACK_IMPORTED_MODULE_8__[\"default\"]) {\n          pageBreaks[i] = segment.start;\n        } else if (segment instanceof Number) {\n          pageBreaks[i] = segment;\n        }\n      }\n\n      if (paginated) {\n        imagesBaseUrl = \"/static/images/texts/\" + selectedText.name + \"/\" + selectedWitness.source.name + \"/\";\n      }\n    }\n  }\n\n  _selectedWitness = selectedWitness;\n  var scrollToId = reducers__WEBPACK_IMPORTED_MODULE_12__.getScrollToId(state);\n  var textAlignment = reducers__WEBPACK_IMPORTED_MODULE_12__.getTextAlignment(state);\n  var syncIdOnClick = reducers__WEBPACK_IMPORTED_MODULE_12__.getSyncIdOnClick(state);\n  var selectedWindow = reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedWindow(state);\n  var selectedWitness2 = reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedTextWitness2(state);\n  var Media = reducers__WEBPACK_IMPORTED_MODULE_12__.getMediaData(state);\n  var imageData = (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getImageData)(state);\n  var isSecondWindowOpen = reducers__WEBPACK_IMPORTED_MODULE_12__.isSecondWindowOpen(state);\n  var condition = (textAlignment === null || textAlignment === void 0 ? void 0 : (_textAlignment$source = textAlignment.source) === null || _textAlignment$source === void 0 ? void 0 : _textAlignment$source.witness) === ((_selectedWitness2 = selectedWitness) === null || _selectedWitness2 === void 0 ? void 0 : _selectedWitness2.id) && isSecondWindowOpen && (textAlignment === null || textAlignment === void 0 ? void 0 : (_textAlignment$target = textAlignment.target) === null || _textAlignment$target === void 0 ? void 0 : _textAlignment$target.witness) === (selectedWitness2 === null || selectedWitness2 === void 0 ? void 0 : selectedWitness2.id) && isPanelLinked;\n  return {\n    text: selectedText,\n    witnesses: witnesses,\n    workingWitness: workingWitness,\n    baseWitness: baseWitness,\n    annotations: annotations,\n    loading: loading,\n    paginated: paginated,\n    pageImagesVisible: pageImagesVisible,\n    annotatedText: annotatedText,\n    selectedAnnotatedSegments: selectedAnnotatedSegments,\n    annotationPositions: annotationPositions,\n    activeAnnotations: _objectSpread({}, appliedAnnotations),\n    activeAnnotation: activeAnnotation,\n    pageBreaks: pageBreaks,\n    imagesBaseUrl: imagesBaseUrl,\n    user: user,\n    textListVisible: textListVisible,\n    selectedWitness: selectedWitness,\n    selectedSearchResult: selectedSearchResult,\n    searchValue: searchValue,\n    fontSize: fontSize,\n    isSecondWindowOpen: isSecondWindowOpen,\n    imageData: imageData,\n    isPanelLinked: isPanelLinked,\n    selectedImage: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedImage)(state),\n    isImagePortrait: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.isImagePortrait)(state),\n    isPanelVisible: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.isPanelVisible)(state),\n    isAnnotating: reducers__WEBPACK_IMPORTED_MODULE_12__.isAnnotating(state),\n    textAlignment: textAlignment,\n    textAlignmentById: textAlignmentById,\n    scrollToId: scrollToId,\n    syncIdOnClick: syncIdOnClick,\n    selectedWindow: selectedWindow,\n    selectedSourceRange: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedSourceRange)(state),\n    selectedTargetRange: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSelectedTargetRange)(state),\n    searchResults: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getSearchResults)(state, searchValue),\n    showTableContent: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getShowTableContent)(state),\n    syncIdOnSearch: reducers__WEBPACK_IMPORTED_MODULE_12__.getSyncIdOnSearch(state),\n    imageAlignmentById: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getImageAlignmentById)(state),\n    imageScrollId: (0,reducers__WEBPACK_IMPORTED_MODULE_12__.getImageScrollId)(state),\n    selectedMedia: Media,\n    condition: condition\n  };\n};\n\nvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n  var dispatch = dispatchProps.dispatch;\n  var annotatedText = stateProps.annotatedText,\n      annotationPositions = stateProps.annotationPositions;\n\n  var didSelectSegmentPosition = function didSelectSegmentPosition(segmentPosition, start, length) {\n    var segmentAnnotations = annotationPositions[segmentPosition];\n    var segmentVariants = [];\n    var segmentPageBreaks = [];\n    var segmentLineBreaks = [];\n\n    if (segmentAnnotations) {\n      segmentVariants = segmentAnnotations.filter(function (annotation) {\n        return annotation.type === lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.variant;\n      });\n      segmentPageBreaks = segmentAnnotations.filter(function (annotation) {\n        return annotation.type === lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.pageBreak;\n      });\n      segmentLineBreaks = segmentAnnotations.filter(function (annotation) {\n        return annotation.type === lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.lineBreak;\n      });\n    }\n\n    var activeAnnotations = lodash__WEBPACK_IMPORTED_MODULE_13___default().intersectionWith(segmentVariants.concat(segmentPageBreaks, segmentLineBreaks), annotatedText.annotations, function (a, b) {\n      return a.toString() == b.toString();\n    });\n\n    var activeAnnotation = null;\n\n    if (activeAnnotations.length > 0) {\n      // get any active annotations\n      activeAnnotation = activeAnnotations[0];\n    } else if (segmentVariants && segmentVariants.length > 0) {\n      // get base text annotation for longest annotation highlighted in text\n      var longestAvailable = getLongestAnnotation(segmentVariants);\n\n      var _annotatedText$getPos3 = annotatedText.getPositionOfAnnotation(longestAvailable),\n          _annotatedText$getPos4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_annotatedText$getPos3, 2),\n          _start = _annotatedText$getPos4[0],\n          textLength = _annotatedText$getPos4[1];\n\n      if (longestAvailable && longestAvailable.isInsertion) {\n        textLength = 0;\n      }\n\n      activeAnnotation = annotatedText.getBaseAnnotation(_start, textLength);\n    } else {\n      // get base annotation of just the segment\n      activeAnnotation = annotatedText.getBaseAnnotation(start, length);\n    }\n\n    dispatch((0,actions__WEBPACK_IMPORTED_MODULE_11__.changedActiveTextAnnotation)(activeAnnotation));\n  };\n\n  var isInsertion = function isInsertion(id) {\n    return id.indexOf(\"i_\") !== -1;\n  };\n\n  var isDeletion = function isDeletion(id) {\n    return id.indexOf(\"ds_\") !== -1;\n  };\n\n  var isPageBreak = function isPageBreak(id) {\n    return id.indexOf(\"p_\") !== -1;\n  };\n\n  var isLineBreak = function isLineBreak(id) {\n    return id.indexOf(\"l_\") !== -1;\n  };\n\n  var idFromSegmentId = function idFromSegmentId(id) {\n    var start = 0;\n\n    if (isInsertion(id)) {\n      start = id.substr(2);\n    } else if (isDeletion(id)) {\n      start = id.substr(3);\n    } else {\n      start = id.substr(2);\n    }\n\n    return start;\n  };\n\n  return _objectSpread(_objectSpread(_objectSpread({}, stateProps), ownProps), {}, {\n    didSelectSegmentIds: function didSelectSegmentIds(segmentIds) {\n      if (segmentIds.length === 0) {\n        return;\n      }\n\n      var segmentAnnotations = [];\n      var segments = [];\n\n      var _iterator = _createForOfIteratorHelper(segmentIds),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var segmentId = _step.value;\n\n          if (isDeletion(segmentId) || isInsertion(segmentId)) {\n            continue;\n          }\n\n          var segmentPosition = idFromSegmentId(segmentId);\n          var textSegment = annotatedText.segmentedText.segmentAtPosition(segmentPosition);\n          segments.push(textSegment);\n          var annotations = annotationPositions[textSegment.start];\n\n          if (annotations) {\n            segmentAnnotations = segmentAnnotations.concat(annotations);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      segmentAnnotations = lodash__WEBPACK_IMPORTED_MODULE_13___default().uniqWith(segmentAnnotations, function (a, b) {\n        return a.toString() == b.toString();\n      });\n\n      var activeAnnotations = lodash__WEBPACK_IMPORTED_MODULE_13___default().intersectionWith(segmentAnnotations, annotatedText.annotations, function (a, b) {\n        return a.toString() == b.toString();\n      });\n\n      var range = getSegmentsRange(segments, activeAnnotations, segmentAnnotations, stateProps.annotatedText);\n\n      if (!range) {\n        console.warn(\"No range for selected segment ids: %o\", segmentIds);\n        return;\n      }\n\n      var baseAnnotation = annotatedText.getBaseAnnotation(range.start, range.length);\n      var activeAnnotation = null;\n\n      if (range.annotation) {\n        activeAnnotation = range.annotation;\n      } else if (activeAnnotations.length > 0) {\n        var content = annotatedText.segmentedText.segmentsInRange(range.start, range.length).reduce(function (content, segment) {\n          return content + segment.text;\n        }, \"\"); // TODO: test this when editing non-working edition.\n        // Check if getTextWorkingWitness works as required\n\n        if (!stateProps.selectedWitness) {\n          console.log(\"no stateProps.selectedWitness: %o\", stateProps.selectedWitness);\n        }\n\n        activeAnnotation = new lib_Annotation__WEBPACK_IMPORTED_MODULE_4__[\"default\"](lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.WORKING_VERSION_ANNOTATION_ID, getTextWorkingWitness(stateProps.text), baseAnnotation.start, baseAnnotation.length, content, lib_Annotation__WEBPACK_IMPORTED_MODULE_4__.ANNOTATION_TYPES.variant, stateProps.selectedWitness, stateProps.user);\n      } else {\n        activeAnnotation = baseAnnotation;\n      }\n\n      dispatch((0,actions__WEBPACK_IMPORTED_MODULE_11__.changedActiveTextAnnotation)(activeAnnotation));\n    },\n    selectedSegmentId: function selectedSegmentId(segmentId) {\n      var start = idFromSegmentId(segmentId);\n      var positionKey = start;\n\n      if (isInsertion(segmentId)) {\n        positionKey = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.INSERTION_KEY + start;\n      } else if (isDeletion(segmentId)) {\n        positionKey = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.DELETION_KEY + start;\n      } else if (isPageBreak(segmentId)) {\n        positionKey = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.PAGE_BREAK_KEY + start;\n      } else if (isLineBreak(segmentId)) {\n        positionKey = lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.LINE_BREAK_KEY + start;\n      }\n\n      var segmentAnnotations = annotationPositions[positionKey];\n\n      if (DISMISS_CONTROLS_ON_CLICK && stateProps.activeAnnotation || segmentId === \"\") {\n        var activeAnnotation = stateProps.activeAnnotation;\n\n        if (activeAnnotation) {\n          var dismissTextAnnotation = actions__WEBPACK_IMPORTED_MODULE_11__.changedActiveTextAnnotation(null);\n          dispatch(dismissTextAnnotation);\n        }\n      } else {\n        if (isInsertion(segmentId) || isDeletion(segmentId) || isPageBreak(segmentId) || isLineBreak(segmentId)) {\n          var length = 0;\n          didSelectSegmentPosition(positionKey, start, length);\n        } else {\n          var segmentPosition = Number(idFromSegmentId(segmentId));\n          var textSegment = annotatedText.segmentedText.segmentAtPosition(segmentPosition);\n\n          if (textSegment) {\n            didSelectSegmentPosition(textSegment.start, textSegment.start, textSegment.length);\n          }\n        }\n      }\n    },\n    changeScrollToId: function changeScrollToId(payload) {\n      return dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.changeScrollToId(payload));\n    },\n    changeSyncIdOnClick: function changeSyncIdOnClick(payload) {\n      return dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.changeSyncIdOnClick(payload));\n    },\n    changeSelectedImage: function changeSelectedImage(payload) {\n      dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.selectImage(payload));\n    },\n    changeSelectedWindow: function changeSelectedWindow(payload) {\n      dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.changeSelectedWindow(payload));\n    },\n    changeSelectedRange: function changeSelectedRange(payload) {\n      dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.changeSelectedRange(payload));\n    },\n    changeShowTableContent: function changeShowTableContent(payload) {\n      dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.showTableContent(payload));\n    },\n    closeAnnotation: function closeAnnotation() {\n      var dismissTextAnnotation = actions__WEBPACK_IMPORTED_MODULE_11__.changedActiveTextAnnotation(null);\n      dispatch(dismissTextAnnotation);\n    },\n    changeImageScrollId: function changeImageScrollId(data) {\n      dispatch(actions__WEBPACK_IMPORTED_MODULE_11__.changeImageScrollId(data));\n    }\n  });\n};\n\nvar getPageBreaks = function getPageBreaks(witnessPageBreaks, basePageBreaks) {\n  var witnessStarts = [];\n\n  lodash__WEBPACK_IMPORTED_MODULE_13___default().forIn(witnessPageBreaks, function (o) {\n    return witnessStarts.push(o.start);\n  });\n\n  witnessStarts = witnessStarts.sort(function (a, b) {\n    return a - b;\n  });\n\n  if (!basePageBreaks) {\n    return witnessStarts;\n  }\n\n  var baseStarts = [];\n\n  lodash__WEBPACK_IMPORTED_MODULE_13___default().forIn(basePageBreaks, function (o) {\n    return baseStarts.push(o.start);\n  });\n\n  baseStarts = baseStarts.sort(function (a, b) {\n    return a - b;\n  });\n\n  if (witnessStarts.length === 0) {\n    return baseStarts;\n  } // Only add page breaks if witness has < 90% of base witness breaks.\n  // Editions often have differing numbers of words per page so can't\n  // be 100%.\n\n\n  var threshold = 0.9;\n\n  if (witnessStarts.length / baseStarts.length < threshold) {\n    var lastWitnessPageStart = witnessStarts[witnessStarts.length - 1];\n\n    for (var i = 0, len = baseStarts.length; i < len; i++) {\n      var start = baseStarts[i];\n      if (start > lastWitnessPageStart) witnessStarts.push(start);\n    }\n  }\n\n  console.log(witnessStarts);\n  return witnessStarts;\n};\n\nvar getTextWorkingWitness = function getTextWorkingWitness(textData) {\n  var source = new lib_Source__WEBPACK_IMPORTED_MODULE_5__[\"default\"](lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.WORKING_VERSION_ANNOTATION_ID, lib_Source__WEBPACK_IMPORTED_MODULE_5__.WORKING_VERSION_SOURCE_NAME);\n  var text = new lib_Text__WEBPACK_IMPORTED_MODULE_7__[\"default\"](textData.id, textData.name);\n  var witness = new lib_Witness__WEBPACK_IMPORTED_MODULE_6__[\"default\"](lib_AnnotatedText__WEBPACK_IMPORTED_MODULE_9__.WORKING_VERSION_ANNOTATION_ID, text, source, \"\", false);\n  return witness;\n};\n\nvar getSegmentsRange = function getSegmentsRange(segments, activeAnnotations, annotations, annotatedText) {\n  if (segments.length === 0) {\n    return null;\n  }\n\n  var first = segments[0];\n  var last = segments[segments.length - 1];\n  var start = first.start;\n  var end = last.end;\n  var startAnnotation = null;\n  var endAnnotation = null;\n\n  for (var i = 0; i < annotations.length; i++) {\n    var annotation = annotations[i];\n    var annotationStart = void 0,\n        annotationLength = void 0,\n        annotationEnd = null;\n\n    var _annotatedText$getPos5 = annotatedText.getPositionOfAnnotation(annotation);\n\n    var _annotatedText$getPos6 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_annotatedText$getPos5, 2);\n\n    annotationStart = _annotatedText$getPos6[0];\n    annotationLength = _annotatedText$getPos6[1];\n\n    if (activeAnnotations.indexOf(annotation) !== -1) {\n      if (annotationStart && annotationStart < start) {\n        start = annotationStart;\n        startAnnotation = annotation;\n      }\n\n      annotationEnd = annotationStart + annotationLength - 1;\n\n      if (annotationEnd && annotationEnd > end) {\n        end = annotationEnd;\n        endAnnotation = annotationEnd;\n      }\n    } else {\n      // For inactive annotions - we want to select the whole\n      // length of text the annotation refers to.\n      annotationEnd = annotationStart + annotationLength - 1;\n\n      if (annotationEnd > end) {\n        end = annotationEnd;\n      }\n    }\n  } // Set if the whole range is encompassed by a single annotation\n\n\n  var rangeAnnotation = null;\n\n  if (startAnnotation && endAnnotation && startAnnotation === endAnnotation) {\n    rangeAnnotation = startAnnotation;\n  }\n\n  return {\n    start: start,\n    length: end - start + 1,\n    annotation: rangeAnnotation\n  };\n};\n\nvar getLongestAnnotation = function getLongestAnnotation(annotations) {\n  var longest = null;\n\n  for (var i = 0; i < annotations.length; i++) {\n    var annotation = annotations[i];\n\n    if (!longest) {\n      longest = annotation;\n    } else {\n      if (annotation.length > longest.length) {\n        longest = annotation;\n      }\n    }\n  }\n\n  return longest;\n};\n\nvar TextDetailContainer = (0,react_redux__WEBPACK_IMPORTED_MODULE_3__.connect)(mapStateToProps, null, mergeProps)(components_TextDetail__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().memo(TextDetailContainer));\n\n//# sourceURL=webpack://teminusclient/./app/components/TextDetail/TextDetailContainer.js?");

/***/ }),

/***/ "./app/components/TextDetail/index.js":
/*!********************************************!*\
  !*** ./app/components/TextDetail/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _TextDetail__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _TextDetail__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TextDetail */ \"./app/components/TextDetail/TextDetail.js\");\n\n\n//# sourceURL=webpack://teminusclient/./app/components/TextDetail/index.js?");

/***/ })

}]);